[ CodeBlock
    ( "id0-stitched-out" , [ "stitched" ] , [] )
    "                  _\\|/_\n                  (o o)\n          +----oOO-{_}-OOo--------------------------+\n          |                                         |\n          |                           _       _     |\n          |    __ _ _ __  _   _ _ __ | | ___ | |_   |\n          |   / _` | '_ \\| | | | '_ \\| |/ _ \\| __|  |\n          |  | (_| | | | | |_| | |_) | | (_) | |_   |\n          |   \\__, |_| |_|\\__,_| .__/|_|\\___/ \\__|  |\n          |   |___/            |_|                  |\n          |                                         |\n          +-----------------------------------------+\n                https://gnuplot.sourceforge.net\n\n\n\n           Usage: gnuplot [OPTION] ... [FILE]\n             -V, --version\n             -h, --help\n             -p  --persist\n             -s  --slow\n             -d  --default-settings\n             -c  scriptfile ARG1 ARG2 ... \n             -e  \"command1; command2; ...\"\n           gnuplot 6.0 patchlevel 0\n"
, RawBlock (Format "tex") "\\newpage"
, Header
    1
    ( "simple-plot" , [] , [] )
    [ Str "Simple" , Space , Str "Plot" ]
, Para
    [ Image
        ( "id1-stitched-art"
        , [ "stitched" ]
        , [ ( "caption" , "Created by gnuplot" ) ]
        )
        [ Str "Created" , Space , Str "by" , Space , Str "gnuplot" ]
        ( ".stitch/id1-2b4d2c2282d56f5b3479690d5472cb200074d94d.png"
        , "no-title"
        )
    , Str "nbs;"
    ]
, CodeBlock
    ( "id1"
    , [ "stitch" ]
    , [ ( "cfg" , "gnuplot" )
      , ( "caption" , "Created by gnuplot" )
      ]
    )
    "``` {#id1 .stitch cfg=\"gnuplot\" caption=\"Created by gnuplot\"}\nset terminal pngcairo transparent enhanced font \\\n    \"arial,10\" fontscale 1.0 size 500, 350\nset key inside left top vertical Right noreverse enhanced \\\n    autotitles box linetype -1 linewidth 1.000\nset samples 200, 200\nplot [-30:20] besj0(x)*0.12e1 with impulses, \\\n    (x**besj0(x))-2.5 with points\n```\n"
, CodeBlock
    ( "id1-stitched-err"
    , [ "stitched" ]
    , [ ( "caption" , "Created by gnuplot" ) ]
    )
    "\".stitch/id1-2b4d2c2282d56f5b3479690d5472cb200074d94d.cb\" line\n   7: warning: Did you try to plot a complex-valued function?"
, Header
    1
    ( "surface-no-hidden-lines" , [] , [] )
    [ Str "Surface,"
    , Space
    , Str "no"
    , Space
    , Str "hidden"
    , Space
    , Str "lines"
    ]
, Para
    [ Image
        ( "id2-stitched-art"
        , [ "stitched" ]
        , [ ( "caption" , "Created by gnuplot" ) ]
        )
        [ Str "Created" , Space , Str "by" , Space , Str "gnuplot" ]
        ( ".stitch/id2-6abc612da2d2de9a66a4763795585306d17df41a.png"
        , "no-title"
        )
    , Str "nbs;"
    ]
, CodeBlock
    ( "id2"
    , [ "stitch" ]
    , [ ( "cfg" , "gnuplot" )
      , ( "caption" , "Created by gnuplot" )
      ]
    )
    "``` {#id2 .stitch cfg=\"gnuplot\" caption=\"Created by gnuplot\"}\nset terminal pngcairo  transparent enhanced font \"arial,10\" fontscale 1.0 \\\n    size 600, 400\n# set output 'gnuplot-02.png'\nset samples 20, 20\nset isosamples 20, 20\nset hidden3d back offset 1 trianglepattern 3 undefined 1 altdiagonal bentover\nset style data lines\nset title \"Hidden line removal of explicit surfaces\"\nset trange [ * : * ] noreverse nowriteback\nset urange [ * : * ] noreverse nowriteback\nset vrange [ * : * ] noreverse nowriteback\nset xrange [ -3.00000 : 3.00000 ] noreverse nowriteback\nset x2range [ * : * ] noreverse writeback\nset yrange [ -2.00000 : 2.00000 ] noreverse nowriteback\nset y2range [ * : * ] noreverse writeback\nset zrange [ * : * ] noreverse writeback\nset cbrange [ * : * ] noreverse writeback\nset rrange [ * : * ] noreverse writeback\nset colorbox vertical origin screen 0.9, 0.2 size screen 0.05, 0.6 front \\\n    noinvert bdefault\nVERSION = \"gnuplot version 6.0.3\"\nNO_ANIMATION = 1\nsplot 1 / (x*x + y*y + 1)\n```\n"
, CodeBlock
    ( "id2-stitched-err"
    , [ "stitched" ]
    , [ ( "caption" , "Created by gnuplot" ) ]
    )
    "[stitch] stderr - no output"
, Header
    1
    ( "regular-image" , [] , [] )
    [ Str "Regular" , Space , Str "image" ]
, Figure
    ( "" , [] , [] )
    (Caption
       Nothing [ Plain [ Str "regular" , Space , Str "image" ] ])
    [ Plain
        [ Image
            ( "" , [] , [ ( "width" , "100%" ) ] )
            [ Str "regular" , Space , Str "image" ]
            ( ".stitch/gnuplot.png" , "" )
        ]
    ]
, Header
    1 ( "documentation" , [] , [] ) [ Str "Documentation" ]
, Header
    2
    ( "gnuplot--h" , [] , [] )
    [ Str "gnuplot" , Space , Str "-h" ]
, Header
    2
    ( "man-gnuplot" , [] , [] )
    [ Str "man" , Space , Str "gnuplot" ]
, CodeBlock
    ( "man-stitched-out" , [ "stitched" ] , [] )
    "GNUPLOT(1)               General Commands Manual               GNUPLOT(1)\n\nNAME\n       gnuplot - an interactive plotting program\n\nSYNOPSIS\n       gnuplot [X11 options] [options] [file ...]\n\nDESCRIPTION\n       Gnuplot is a command-driven interactive plotting program.\n\n       If file names are given on the command line, gnuplot loads and ex-\n       ecutes  each file in the order specified, and exits after the last\n       file is processed.  If no files are given, gnuplot prompts for in-\n       teractive commands.\n\n       Here are some of its features:\n\n       Plots any number of functions, built up of C operators, C math li-\n       brary functions, and some things C doesn't have  like  **,  sgn(),\n       etc.\n\n       User-defined constants and functions.\n\n       All  computations  performed in the complex domain.  Just the real\n       part is plotted by default, but functions like  imag()  and  abs()\n       and arg() are available to override this.\n\n       Many  presentation  styles  for plotting user data from files, in-\n       cluding surface-fitting, error bars,  boxplots,  histograms,  heat\n       maps,  and simple manipulation of image data.  There is an on-line\n       demo collection at\n       http://gnuplot.info/demo\n\n       Nonlinear least-squares fitting.\n\n       2D and 3D plots with mouse-controlled zooming, rotation,  and  hy-\n       pertext.\n\n       Shell escapes and command line substitution.\n\n       Load and save capability.\n\n       Support for a huge variety of output devices and file formats.\n\nOPTIONS\n       -p, --persist lets plot windows survive after main gnuplot program\n       exits.\n\n       -c  scriptname  ARG1  ARG2 ..., load script using gnuplot's \"call\"\n       mechanism and pass it the remainder of the command line  as  argu-\n       ments\n\n       -d, --default-settings do not read from gnuplotrc, ~/.gnuplot, and\n       $XDG_CONFIG_HOME/gnuplot/gnuplotrc on entry.\n\n       -e  \"command  list\" executes the requested commands before loading\n       the next input file.\n\n       -s, --slow wait for slow font initialization rather than  continu-\n       ing with an error.\n\n       -h, --help print summary of usage\n\n       -V, --version show current version\n\nX11 OPTIONS\n       For  terminal type x11, gnuplot accepts the standard X Toolkit op-\n       tions and resources such as geometry, font,  and  background.  See\n       the  X(1) man page for a description of common options.  For addi-\n       tional X options specific to gnuplot, type help x11 on the gnuplot\n       command line. These options  have  no  effect  on  other  terminal\n       types.\n\nENVIRONMENT\n       A number of shell environment variables are understood by gnuplot.\n       None of these are required.\n\n       GNUTERM\n              The  name of the terminal type to be used by default.  This\n              can be overridden by the gnuplotrc, .gnuplot, or  $XDG_CON-\n              FIG_HOME/gnuplot/gnuplotrc  start-up  files and, of course,\n              by later explicit \"set terminal\" commands.\n\n       GNUHELP\n              The pathname of the HELP file (gnuplot.gih).\n\n       HOME   The name of a directory to search for a .gnuplot file.\n\n       PAGER  An output filter for help messages.\n\n       SHELL  The program used for the \"shell\" command.\n\n       FIT_SCRIPT\n              Specifies a gnuplot command to be executed when  a  fit  is\n              interrupted---see \"help fit\".\n\n       FIT_LOG\n              The name of the logfile maintained by fit.\n\n       GNUPLOT_LIB\n              Additional  search  directories for data and command files.\n              The variable may contain a single directory name, or a list\n              of directories separated  by  ':'.  The  contents  of  GNU-\n              PLOT_LIB  are  appended to the \"loadpath\" variable, but not\n              saved with the \"save\" and \"save set\" commands.\n\n       GDFONTPATH\n              Several gnuplot terminal drivers access TrueType fonts  via\n              the  gd  library.  This variable gives the font search path\n              for these drivers.\n\n       GNUPLOT_DEFAULT_GDFONT\n              The default font for the terminal drivers that access True-\n              Type fonts via the gd library.\n\n       GNUPLOT_FONTPATH\n              The font search path used by the postscript  terminal.  The\n              format is the same as for GNUPLOT_LIB. The contents of GNU-\n              PLOT_FONTPATH  are appended to the \"fontpath\" variable, but\n              not saved with the \"save\" and \"save set\" commands.\n\n       GNUPLOT_PS_DIR\n              Used by the postscript driver to locate  external  prologue\n              files. Depending on the build process, gnuplot contains ei-\n              ther  a  builtin  copy  of  those files or simply a default\n              hardcoded path. Use this variable to  test  the  postscript\n              terminal  with  custom prologue files. See \"help postscript\n              prologue\".\n\nFILES\n       gnuplotrc\n              When gnuplot is run, it first looks for a system-wide  ini-\n              tialization file named gnuplotrc.  The standard location of\n              this  file expected by the program is reported by the \"show\n              loadpath\" command.\n\n       .gnuplot\n              After loading the system-wide initialization file, if  any,\n              Gnuplot looks for a private initialization file in the HOME\n              directory.   It may contain any legal gnuplot commands, but\n              typically they are limited to setting the preferred  termi-\n              nal  and  line types and defining frequently-used functions\n              or variables.\n\n       $XDG_CONFIG_HOME/gnuplot/gnuplotrc\n              After loading the other initialization files, Gnuplot  will\n              check  if  there  is  a file named gnuplotrc in the gnuplot\n              subdirectory in $XDG_CONFIG_HOME (default ~/.config).   The\n              same restrictions as for .gnuplot apply.\n\n       fit.log\n              The  default  name  of the logfile output by the \"fit\" com-\n              mand.\n\nAUTHORS\n       Original authors: Thomas Williams and Colin Kelley.  Starting with\n       gnuplot version 3.8, the project  source  is  cooperatively  main-\n       tained on SourceForge by a large number of contributors.\n\nBUGS\n       Please report bugs using the project bug tracker on SourceForge.\n\nSEE ALSO\n       See the printed manual or the on-line help for details on specific\n       commands.  Project web site at http://gnuplot.info\n\n4th Berkeley Distribution     February 2020                    GNUPLOT(1)\n"
]
